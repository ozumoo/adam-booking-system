services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: painter_booking_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: painter_booking_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - painter_booking_network

  # NestJS Backend API
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: painter_booking_api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: painter_booking_db
      PORT: 3000
      SEED_DB: "true"
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - painter_booking_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: painter_booking_frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - painter_booking_network

volumes:
  postgres_data:

networks:
  painter_booking_network:
    driver: bridge
